// Code generated by MockGen. DO NOT EDIT.
// Source: type.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockDaoHandler is a mock of DaoHandler interface
type MockDaoHandler struct {
	ctrl     *gomock.Controller
	recorder *MockDaoHandlerMockRecorder
}

// MockDaoHandlerMockRecorder is the mock recorder for MockDaoHandler
type MockDaoHandlerMockRecorder struct {
	mock *MockDaoHandler
}

// NewMockDaoHandler creates a new mock instance
func NewMockDaoHandler(ctrl *gomock.Controller) *MockDaoHandler {
	mock := &MockDaoHandler{ctrl: ctrl}
	mock.recorder = &MockDaoHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDaoHandler) EXPECT() *MockDaoHandlerMockRecorder {
	return m.recorder
}

// SaveBoard mocks base method
func (m *MockDaoHandler) SaveBoard(gender, name string, birthday *time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveBoard", gender, name, birthday)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveBoard indicates an expected call of SaveBoard
func (mr *MockDaoHandlerMockRecorder) SaveBoard(gender, name, birthday interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBoard", reflect.TypeOf((*MockDaoHandler)(nil).SaveBoard), gender, name, birthday)
}
